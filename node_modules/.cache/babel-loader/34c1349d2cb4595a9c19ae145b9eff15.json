{"ast":null,"code":"var _jsxFileName = \"/Users/louistomczak/blockchain-developer-bootcamp/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport { connect } from 'react-redux';\nimport { loadWeb3, loadAccount, loadToken, loadExchange } from '../store/interactions';\nimport { contractsLoadedSelector } from '../store/selectors';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props.dispatch);\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch);\n    const networkId = await web3.eth.net.getId();\n    await loadAccount(web3, dispatch);\n    const token = await loadToken(web3, networkId, dispatch);\n\n    if (!token) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.');\n      return;\n    }\n\n    const exchange = await loadExchange(web3, networkId, dispatch);\n\n    if (!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.');\n      return;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), this.props.contractsLoaded ? /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 54\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/louistomczak/blockchain-developer-bootcamp/src/components/App.js"],"names":["React","Component","Navbar","Content","connect","loadWeb3","loadAccount","loadToken","loadExchange","contractsLoadedSelector","App","componentWillMount","loadBlockchainData","props","dispatch","web3","networkId","eth","net","getId","token","window","alert","exchange","render","contractsLoaded","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,YAJF,QAKO,uBALP;AAMA,SAASC,uBAAT,QAAwC,oBAAxC;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACD;;AAEuB,QAAlBF,kBAAkB,CAACE,QAAD,EAAW;AACjC,UAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACS,QAAD,CAA3B;AACA,UAAME,SAAS,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMb,WAAW,CAACS,IAAD,EAAOD,QAAP,CAAjB;AACA,UAAMM,KAAK,GAAG,MAAMb,SAAS,CAACQ,IAAD,EAAOC,SAAP,EAAkBF,QAAlB,CAA7B;;AACA,QAAG,CAACM,KAAJ,EAAW;AACTC,MAAAA,MAAM,CAACC,KAAP,CAAa,wGAAb;AACA;AACD;;AACD,UAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACO,IAAD,EAAOC,SAAP,EAAkBF,QAAlB,CAAnC;;AACA,QAAG,CAACS,QAAJ,EAAc;AACZF,MAAAA,MAAM,CAACC,KAAP,CAAa,2GAAb;AACA;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,KAAKX,KAAL,CAAWY,eAAX,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,gBAA2C;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/C,CADF;AAMD;;AA5ByB;;AA+B5B,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEhB,uBAAuB,CAACkB,KAAD;AADnC,GAAP;AAGD;;AAED,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBhB,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Content from './Content'\nimport { connect } from 'react-redux'\nimport {\n  loadWeb3,\n  loadAccount,\n  loadToken,\n  loadExchange\n} from '../store/interactions'\nimport { contractsLoadedSelector } from '../store/selectors'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch)\n    const networkId = await web3.eth.net.getId()\n    await loadAccount(web3, dispatch)\n    const token = await loadToken(web3, networkId, dispatch)\n    if(!token) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n    const exchange = await loadExchange(web3, networkId, dispatch)\n    if(!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        { this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div> }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}