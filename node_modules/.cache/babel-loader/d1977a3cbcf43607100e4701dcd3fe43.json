{"ast":null,"code":"import { combineReducers } from 'redux';\n\nfunction web3() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,\n        connection: action.connection\n      };\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state,\n        account: action.account\n      };\n\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state,\n        balance: action.balance\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state,\n        loaded: true,\n        contract: action.contract\n      };\n\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state,\n        balance: action.balance\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let index, data;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state,\n        loaded: true,\n        contract: action.contract\n      };\n\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state,\n        cancelledOrders: {\n          loaded: true,\n          data: action.cancelledOrders\n        }\n      };\n\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state,\n        filledOrders: {\n          loaded: true,\n          data: action.filledOrders\n        }\n      };\n\n    case 'ALL_ORDERS_LOADED':\n      return { ...state,\n        allOrders: {\n          loaded: true,\n          data: action.allOrders\n        }\n      };\n\n    case 'ORDER_CANCELLING':\n      return { ...state,\n        orderCancelling: true\n      };\n\n    case 'ORDER_CANCELLED':\n      return { ...state,\n        orderCancelling: false,\n        cancelledOrders: { ...state.cancelledOrders,\n          data: [...state.cancelledOrders.data, action.order]\n        }\n      };\n\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if (index === -1) {\n        data = [...state.filledOrders.data, action.order];\n      } else {\n        data = state.filledOrders.data;\n      }\n\n      return { ...state,\n        orderFilling: false,\n        filledOrders: { ...state.filledOrders,\n          data\n        }\n      };\n\n    case 'ORDER_FILLING':\n      return { ...state,\n        orderFilling: true\n      };\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state,\n        etherBalance: action.balance\n      };\n\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state,\n        tokenBalance: action.balance\n      };\n\n    case 'BALANCES_LOADING':\n      return { ...state,\n        balancesLoading: true\n      };\n\n    case 'BALANCES_LOADED':\n      return { ...state,\n        balancesLoading: false\n      };\n\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state,\n        etherDepositAmount: action.amount\n      };\n\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state,\n        etherWithdrawAmount: action.amount\n      };\n\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state,\n        tokenDepositAmount: action.amount\n      };\n\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state,\n        tokenWithdrawAmount: action.amount\n      };\n\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return { ...state,\n        buyOrder: { ...state.buyOrder,\n          amount: action.amount\n        }\n      };\n\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return { ...state,\n        buyOrder: { ...state.buyOrder,\n          price: action.price\n        }\n      };\n\n    case 'BUY_ORDER_MAKING':\n      return { ...state,\n        buyOrder: { ...state.buyOrder,\n          amount: null,\n          price: null,\n          making: true\n        }\n      };\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n      if (index === -1) {\n        data = [...state.allOrders.data, action.order];\n      } else {\n        data = state.allOrders.data;\n      }\n\n      return { ...state,\n        allOrders: { ...state.allOrders,\n          data\n        },\n        buyOrder: { ...state.buyOrder,\n          making: false\n        },\n        sellOrder: { ...state.sellOrder,\n          making: false\n        }\n      };\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return { ...state,\n        sellOrder: { ...state.sellOrder,\n          amount: action.amount\n        }\n      };\n\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return { ...state,\n        sellOrder: { ...state.sellOrder,\n          price: action.price\n        }\n      };\n\n    case 'SELL_ORDER_MAKING':\n      return { ...state,\n        sellOrder: { ...state.sellOrder,\n          amount: null,\n          price: null,\n          making: true\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/louistomczak/blockchain-developer-bootcamp/src/store/reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","balance","token","loaded","contract","exchange","index","data","cancelledOrders","filledOrders","allOrders","orderCancelling","order","findIndex","id","orderFilling","etherBalance","tokenBalance","balancesLoading","etherDepositAmount","amount","etherWithdrawAmount","tokenDepositAmount","tokenWithdrawAmount","buyOrder","price","making","sellOrder","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    case 'ETHER_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'TOKEN_BALANCE_LOADED':\n      return { ...state, balance: action.balance }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  let index, data\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, loaded: true, contract: action.contract }\n    case 'CANCELLED_ORDERS_LOADED':\n      return { ...state, cancelledOrders: { loaded: true, data: action.cancelledOrders } }\n    case 'FILLED_ORDERS_LOADED':\n      return { ...state, filledOrders: { loaded: true, data: action.filledOrders } }\n    case 'ALL_ORDERS_LOADED':\n      return { ...state, allOrders: { loaded: true, data: action.allOrders } }\n    case 'ORDER_CANCELLING':\n      return { ...state, orderCancelling: true }\n    case 'ORDER_CANCELLED':\n      return {\n        ...state,\n        orderCancelling: false,\n        cancelledOrders: {\n          ...state.cancelledOrders,\n          data: [\n            ...state.cancelledOrders.data,\n            action.order\n          ]\n        }\n      }\n    case 'ORDER_FILLED':\n      // Prevent duplicate orders\n      index = state.filledOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.filledOrders.data, action.order]\n      } else {\n        data = state.filledOrders.data\n      }\n\n      return {\n        ...state,\n        orderFilling: false,\n        filledOrders: {\n          ...state.filledOrders,\n          data\n        }\n      }\n\n    case 'ORDER_FILLING':\n      return { ...state, orderFilling: true }\n\n    case 'EXCHANGE_ETHER_BALANCE_LOADED':\n      return { ...state, etherBalance: action.balance }\n    case 'EXCHANGE_TOKEN_BALANCE_LOADED':\n      return { ...state, tokenBalance: action.balance }\n    case 'BALANCES_LOADING':\n      return { ...state, balancesLoading: true }\n    case 'BALANCES_LOADED':\n      return { ...state, balancesLoading: false }\n    case 'ETHER_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, etherDepositAmount: action.amount }\n    case 'ETHER_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, etherWithdrawAmount: action.amount }\n    case 'TOKEN_DEPOSIT_AMOUNT_CHANGED':\n      return { ...state, tokenDepositAmount: action.amount }\n    case 'TOKEN_WITHDRAW_AMOUNT_CHANGED':\n      return { ...state, tokenWithdrawAmount: action.amount }\n\n    case 'BUY_ORDER_AMOUNT_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: action.amount } }\n    case 'BUY_ORDER_PRICE_CHANGED':\n      return { ...state, buyOrder: { ...state.buyOrder, price: action.price } }\n    case 'BUY_ORDER_MAKING':\n      return { ...state, buyOrder: { ...state.buyOrder, amount: null, price: null, making: true } }\n\n    case 'ORDER_MADE':\n      // Prevent duplicate orders\n      index = state.allOrders.data.findIndex(order => order.id === action.order.id);\n\n      if(index === -1) {\n        data = [...state.allOrders.data, action.order]\n      } else {\n        data = state.allOrders.data\n      }\n\n      return {\n        ...state,\n        allOrders: {\n          ...state.allOrders,\n          data\n        },\n        buyOrder: {\n          ...state.buyOrder,\n          making: false\n        },\n        sellOrder: {\n          ...state.sellOrder,\n          making: false\n        }\n      }\n\n    case 'SELL_ORDER_AMOUNT_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: action.amount } }\n    case 'SELL_ORDER_PRICE_CHANGED':\n      return { ...state, sellOrder: { ...state.sellOrder, price: action.price } }\n    case 'SELL_ORDER_MAKING':\n      return { ...state, sellOrder: { ...state.sellOrder, amount: null, price: null, making: true } }\n\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}