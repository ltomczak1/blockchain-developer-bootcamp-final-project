{"ast":null,"code":"import { combineReducers } from 'redux';\n\nfunction web3() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,\n        connection: action.connection\n      };\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state,\n        account: action.account\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state,\n        contract: action.contract\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state,\n        contract: action.contract\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/louistomczak/blockchain-developer-bootcamp/src/store/reducers.js"],"names":["combineReducers","web3","state","action","type","connection","account","token","contract","exchange","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,SAASC,IAAT,GAAkC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAaG,QAAAA,UAAU,EAAEF,MAAM,CAACE;AAAhC,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAA5B,OAAP;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD;;AAED,SAASK,KAAT,GAAmC;AAAA,MAApBL,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYM,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAA7B,OAAP;;AACF;AACE,aAAON,KAAP;AAJJ;AAMD;;AAED,SAASO,QAAT,GAAsC;AAAA,MAApBP,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYM,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAA7B,OAAP;;AACF;AACE,aAAON,KAAP;AAJJ;AAMD;;AAED,MAAMQ,WAAW,GAAGV,eAAe,CAAC;AAClCC,EAAAA,IADkC;AAElCM,EAAAA,KAFkC;AAGlCE,EAAAA;AAHkC,CAAD,CAAnC;AAMA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\n\nfunction web3(state = {}, action) {\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return { ...state,  connection: action.connection }\n    case 'WEB3_ACCOUNT_LOADED':\n      return { ...state, account: action.account }\n    default:\n      return state\n  }\n}\n\nfunction token(state = {}, action) {\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return { ...state, contract: action.contract }\n    default:\n      return state\n  }\n}\n\nfunction exchange(state = {}, action) {\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return { ...state, contract: action.contract }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  web3,\n  token,\n  exchange\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}