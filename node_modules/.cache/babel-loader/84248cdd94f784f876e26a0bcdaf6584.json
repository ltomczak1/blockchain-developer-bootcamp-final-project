{"ast":null,"code":"var _jsxFileName = \"/Users/louistomczak/blockchain-developer-bootcamp/src/components/MyTransactions.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Spinner from './Spinner';\nimport { myFilledOrdersLoadedSelector, myFilledOrdersSelector, myOpenOrdersLoadedSelector, myOpenOrdersSelector, exchangeSelector, accountSelector, orderCancellingSelector } from '../store/selectors';\nimport { cancelOrder } from '../store/interactions';\n\nconst showMyFilledOrders = props => {\n  const {\n    myFilledOrders\n  } = props;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, myFilledOrders.map(order => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, order.formattedTimestamp), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-\".concat(order.orderTypeClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, order.orderSign, order.tokenAmount), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-\".concat(order.orderTypeClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, order.tokenPrice));\n  }));\n};\n\nconst showMyOpenOrders = props => {\n  const {\n    myOpenOrders,\n    dispatch,\n    exchange,\n    account\n  } = props;\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, myOpenOrders.map(order => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: order.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-\".concat(order.orderTypeClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, order.tokenAmount), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-\".concat(order.orderTypeClass),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, order.tokenPrice), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-muted cancel-order\",\n      onClick: e => {\n        cancelOrder(dispatch, exchange, order, account);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"X\"));\n  }));\n};\n\nclass MyTransactions extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"My Transactions\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"trades\",\n      className: \"bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"trades\",\n      title: \"Trades\",\n      className: \"bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-dark table-sm small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"DAPP\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"DAPP/ETH\"))), this.props.showMyFilledOrders ? showMyFilledOrders(this.props) : /*#__PURE__*/React.createElement(Spinner, {\n      type: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 84\n      }\n    }))), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"orders\",\n      title: \"Orders\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-dark table-sm small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"DAPP/ETH\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Cancel\"))), this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : /*#__PURE__*/React.createElement(Spinner, {\n      type: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 80\n      }\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state);\n  const orderCancelling = orderCancellingSelector(state);\n  return {\n    myFilledOrders: myFilledOrdersSelector(state),\n    showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n    myOpenOrders: myOpenOrdersSelector(state),\n    showMyOpenOrders: myOpenOrdersLoaded && !orderCancelling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(MyTransactions);","map":{"version":3,"sources":["/Users/louistomczak/blockchain-developer-bootcamp/src/components/MyTransactions.js"],"names":["React","Component","connect","Tabs","Tab","Spinner","myFilledOrdersLoadedSelector","myFilledOrdersSelector","myOpenOrdersLoadedSelector","myOpenOrdersSelector","exchangeSelector","accountSelector","orderCancellingSelector","cancelOrder","showMyFilledOrders","props","myFilledOrders","map","order","id","formattedTimestamp","orderTypeClass","orderSign","tokenAmount","tokenPrice","showMyOpenOrders","myOpenOrders","dispatch","exchange","account","e","MyTransactions","render","mapStateToProps","state","myOpenOrdersLoaded","orderCancelling"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,4BADF,EAEEC,sBAFF,EAGEC,0BAHF,EAIEC,oBAJF,EAKEC,gBALF,EAMEC,eANF,EAOEC,uBAPF,QAQO,oBARP;AASA,SAASC,WAAT,QAA4B,uBAA5B;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAqBD,KAA3B;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,cAAc,CAACC,GAAf,CAAoBC,KAAD,IAAW;AAC9B,wBACE;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,KAAK,CAACE,kBAAlC,CADF,eAEE;AAAI,MAAA,SAAS,iBAAUF,KAAK,CAACG,cAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDH,KAAK,CAACI,SAAtD,EAAiEJ,KAAK,CAACK,WAAvE,CAFF,eAGE;AAAI,MAAA,SAAS,iBAAUL,KAAK,CAACG,cAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDH,KAAK,CAACM,UAAtD,CAHF,CADF;AAOD,GARC,CADJ,CADF;AAaD,CAhBD;;AAkBA,MAAMC,gBAAgB,GAAIV,KAAD,IAAW;AAClC,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,MAAgDd,KAAtD;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIW,YAAY,CAACT,GAAb,CAAkBC,KAAD,IAAW;AAC5B,wBACE;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,iBAAUD,KAAK,CAACG,cAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDH,KAAK,CAACK,WAAtD,CADF,eAEE;AAAI,MAAA,SAAS,iBAAUL,KAAK,CAACG,cAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDH,KAAK,CAACM,UAAtD,CAFF,eAGE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAGM,CAAD,IAAO;AACdjB,QAAAA,WAAW,CAACc,QAAD,EAAWC,QAAX,EAAqBV,KAArB,EAA4BW,OAA5B,CAAX;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF;AAYD,GAbC,CADJ,CADF;AAkBD,CArBD;;AAuBA,MAAME,cAAN,SAA6B9B,SAA7B,CAAuC;AACrC+B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,gBAAgB,EAAC,QAAvB;AAAgC,MAAA,SAAS,EAAC,oBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAsC,MAAA,SAAS,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQI,KAAKjB,KAAL,CAAWD,kBAAX,GAAgCA,kBAAkB,CAAC,KAAKC,KAAN,CAAlD,gBAAiE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARrE,CADF,CADF,eAaE,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,QAAd;AAAuB,MAAA,KAAK,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,EAQI,KAAKA,KAAL,CAAWU,gBAAX,GAA8BA,gBAAgB,CAAC,KAAKV,KAAN,CAA9C,gBAA6D,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARjE,CADF,CAbF,CADF,CAJF,CADF;AAmCD;;AArCoC;;AAwCvC,SAASkB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,kBAAkB,GAAG3B,0BAA0B,CAAC0B,KAAD,CAArD;AACA,QAAME,eAAe,GAAGxB,uBAAuB,CAACsB,KAAD,CAA/C;AAEA,SAAO;AACLlB,IAAAA,cAAc,EAAET,sBAAsB,CAAC2B,KAAD,CADjC;AAELpB,IAAAA,kBAAkB,EAAER,4BAA4B,CAAC4B,KAAD,CAF3C;AAGLR,IAAAA,YAAY,EAAEjB,oBAAoB,CAACyB,KAAD,CAH7B;AAILT,IAAAA,gBAAgB,EAAEU,kBAAkB,IAAI,CAACC,eAJpC;AAKLR,IAAAA,QAAQ,EAAElB,gBAAgB,CAACwB,KAAD,CALrB;AAMLL,IAAAA,OAAO,EAAElB,eAAe,CAACuB,KAAD;AANnB,GAAP;AAQD;;AAED,eAAehC,OAAO,CAAC+B,eAAD,CAAP,CAAyBF,cAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport Spinner from './Spinner'\nimport {\n  myFilledOrdersLoadedSelector,\n  myFilledOrdersSelector,\n  myOpenOrdersLoadedSelector,\n  myOpenOrdersSelector,\n  exchangeSelector,\n  accountSelector,\n  orderCancellingSelector\n} from '../store/selectors'\nimport { cancelOrder } from '../store/interactions'\n\nconst showMyFilledOrders = (props) => {\n  const { myFilledOrders } = props\n\n  return(\n    <tbody>\n      { myFilledOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className=\"text-muted\">{order.formattedTimestamp}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.orderSign}{order.tokenAmount}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  )\n}\n\nconst showMyOpenOrders = (props) => {\n  const { myOpenOrders, dispatch, exchange, account } = props\n\n  return(\n    <tbody>\n      { myOpenOrders.map((order) => {\n        return (\n          <tr key={order.id}>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenAmount}</td>\n            <td className={`text-${order.orderTypeClass}`}>{order.tokenPrice}</td>\n            <td\n              className=\"text-muted cancel-order\"\n              onClick={(e) => {\n                cancelOrder(dispatch, exchange, order, account)\n              }}\n            >X</td>\n          </tr>\n        )\n      }) }\n    </tbody>\n  )\n}\n\nclass MyTransactions extends Component {\n  render() {\n    return (\n      <div className=\"card bg-dark text-white\">\n        <div className=\"card-header\">\n          My Transactions\n        </div>\n        <div className=\"card-body\">\n          <Tabs defaultActiveKey=\"trades\" className=\"bg-dark text-white\">\n            <Tab eventKey=\"trades\" title=\"Trades\" className=\"bg-dark\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>DAPP</th>\n                    <th>DAPP/ETH</th>\n                  </tr>\n                </thead>\n                { this.props.showMyFilledOrders ? showMyFilledOrders(this.props) : <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n            <Tab eventKey=\"orders\" title=\"Orders\">\n              <table className=\"table table-dark table-sm small\">\n                <thead>\n                  <tr>\n                    <th>Amount</th>\n                    <th>DAPP/ETH</th>\n                    <th>Cancel</th>\n                  </tr>\n                </thead>\n                { this.props.showMyOpenOrders ? showMyOpenOrders(this.props) : <Spinner type=\"table\" />}\n              </table>\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const myOpenOrdersLoaded = myOpenOrdersLoadedSelector(state)\n  const orderCancelling = orderCancellingSelector(state)\n\n  return {\n    myFilledOrders: myFilledOrdersSelector(state),\n    showMyFilledOrders: myFilledOrdersLoadedSelector(state),\n    myOpenOrders: myOpenOrdersSelector(state),\n    showMyOpenOrders: myOpenOrdersLoaded && !orderCancelling,\n    exchange: exchangeSelector(state),\n    account: accountSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(MyTransactions);\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}